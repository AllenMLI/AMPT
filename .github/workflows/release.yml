name: 'Release to ImageJ update site and deploy GitHub documentation'
on:
  release:
    types: [published]
  workflow_dispatch: # Allow manual triggering.
jobs:
  build_release:
    runs-on: 'ubuntu-latest'
    env:
      IJ_DOWNLOAD_URL: 'https://downloads.imagej.net/fiji/latest/fiji-linux64.zip'
      WIKI_USER: 'ampt-dev'
      UPDATE_PASS: '${{ secrets.IMAGEJ_UPDATE_SITE_PASS }}'
      UPDATE_SITE: 'AMPT'
    steps:
      - uses: 'actions/checkout@v2'
      - uses: 'actions/setup-java@v2'
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: 'Build with Maven'
        run: 'mvn -B package'
      - name: 'Install ImageJ/Fiji'
        run: |
          curl --silent -o fiji.zip ${IJ_DOWNLOAD_URL}
          unzip fiji.zip
          ./Fiji.app/ImageJ-linux64 --headless --update update-force-pristine
          ./Fiji.app/ImageJ-linux64 --headless --update refresh-update-sites --updateall
          ./Fiji.app/ImageJ-linux64 --headless --update update
          ./Fiji.app/ImageJ-linux64 --headless --update edit-update-site ${UPDATE_SITE} https://sites.imagej.net/${UPDATE_SITE}/ "webdav:${WIKI_USER}:${UPDATE_PASS}" .
      - name: 'Install in ImageJ/Fiji (with Maven)'
        run: |
          mvn -B install -Dscijava.app.directory=./Fiji.app -Ddelete.other.versions=true -Dscijava.ignoreDependencies=false
      - name: 'Release to ImageJ update site'
        run: |
          ./Fiji.app/ImageJ-linux64 --headless --update upload-complete-site --force ${UPDATE_SITE}
      - name: 'Deploy GitHub documentation'
        working-directory: './doc_source'
        run: 'make gh-deploy'
